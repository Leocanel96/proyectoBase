{
  "version": 3,
  "sources": ["../../vuetify/src/labs/VDataTable/VDataTable.tsx", "../../vuetify/src/labs/VDataTable/VDataTableFooter.tsx", "../../vuetify/src/labs/VDataTable/composables/paginate.ts", "../../vuetify/src/labs/VDataTable/VDataTableColumn.tsx", "../../vuetify/src/labs/VDataTable/composables/headers.ts", "../../vuetify/src/labs/VDataTable/composables/select.ts", "../../vuetify/src/labs/VDataTable/composables/sort.ts", "../../vuetify/src/labs/VDataTable/VDataTableHeaders.tsx", "../../vuetify/src/labs/VDataTable/composables/group.ts", "../../vuetify/src/labs/VDataTable/VDataTableGroupHeaderRow.tsx", "../../vuetify/src/labs/VDataTable/composables/expand.ts", "../../vuetify/src/labs/VDataTable/VDataTableRow.tsx", "../../vuetify/src/labs/VDataTable/VDataTableRows.tsx", "../../vuetify/src/labs/VDataTable/composables/items.ts", "../../vuetify/src/labs/VDataTable/composables/options.ts", "../../vuetify/src/labs/VDataTable/VDataTableVirtual.tsx", "../../vuetify/src/labs/VDataTable/VDataTableServer.tsx"],
  "sourcesContent": ["// Styles\nimport './VDataTable.sass'\n\n// Components\nimport { makeVDataTableFooterProps, VDataTableFooter } from './VDataTableFooter'\nimport { makeVDataTableHeadersProps, VDataTableHeaders } from './VDataTableHeaders'\nimport { makeVDataTableRowsProps, VDataTableRows } from './VDataTableRows'\nimport { makeVTableProps, VTable } from '@/components/VTable/VTable'\n\n// Composables\nimport { makeDataTableExpandProps, provideExpanded } from './composables/expand'\nimport { createGroupBy, makeDataTableGroupProps, provideGroupBy, useGroupedItems } from './composables/group'\nimport { createHeaders, makeDataTableHeaderProps } from './composables/headers'\nimport { makeDataTableItemsProps, useDataTableItems } from './composables/items'\nimport { useOptions } from './composables/options'\nimport { createPagination, makeDataTablePaginateProps, providePagination, usePaginatedItems } from './composables/paginate'\nimport { makeDataTableSelectProps, provideSelection } from './composables/select'\nimport { createSort, makeDataTableSortProps, provideSort, useSortedItems } from './composables/sort'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeFilterProps, useFilter } from '@/composables/filter'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { UnwrapRef } from 'vue'\nimport type { Group } from './composables/group'\nimport type { DataTableItem, InternalDataTableHeader } from './types'\nimport type { VDataTableHeadersSlots } from './VDataTableHeaders'\nimport type { VDataTableRowsSlots } from './VDataTableRows'\n\nexport type VDataTableSlotProps = {\n  page: number\n  itemsPerPage: number\n  sortBy: UnwrapRef<ReturnType<typeof provideSort>['sortBy']>\n  pageCount: number\n  toggleSort: ReturnType<typeof provideSort>['toggleSort']\n  setItemsPerPage: ReturnType<typeof providePagination>['setItemsPerPage']\n  someSelected: boolean\n  allSelected: boolean\n  isSelected: ReturnType<typeof provideSelection>['isSelected']\n  select: ReturnType<typeof provideSelection>['select']\n  selectAll: ReturnType<typeof provideSelection>['selectAll']\n  toggleSelect: ReturnType<typeof provideSelection>['toggleSelect']\n  isExpanded: ReturnType<typeof provideExpanded>['isExpanded']\n  toggleExpand: ReturnType<typeof provideExpanded>['toggleExpand']\n  isGroupOpen: ReturnType<typeof provideGroupBy>['isGroupOpen']\n  toggleGroup: ReturnType<typeof provideGroupBy>['toggleGroup']\n  items: readonly DataTableItem[]\n  groupedItems: readonly (DataTableItem | Group<DataTableItem>)[]\n  columns: InternalDataTableHeader[]\n  headers: InternalDataTableHeader[][]\n}\n\nexport type VDataTableSlots = VDataTableRowsSlots & VDataTableHeadersSlots & {\n  default: VDataTableSlotProps\n  colgroup: VDataTableSlotProps\n  top: VDataTableSlotProps\n  body: VDataTableSlotProps\n  tbody: VDataTableSlotProps\n  thead: VDataTableSlotProps\n  tfoot: VDataTableSlotProps\n  bottom: VDataTableSlotProps\n  'footer.prepend': never\n}\n\nexport const makeDataTableProps = propsFactory({\n  ...makeVDataTableRowsProps(),\n\n  width: [String, Number],\n  search: String,\n\n  ...makeDataTableExpandProps(),\n  ...makeDataTableGroupProps(),\n  ...makeDataTableHeaderProps(),\n  ...makeDataTableItemsProps(),\n  ...makeDataTableSelectProps(),\n  ...makeDataTableSortProps(),\n  ...makeVDataTableHeadersProps(),\n  ...makeVTableProps(),\n}, 'DataTable')\n\nexport const makeVDataTableProps = propsFactory({\n  ...makeDataTablePaginateProps(),\n  ...makeDataTableProps(),\n  ...makeFilterProps(),\n  ...makeVDataTableFooterProps(),\n}, 'VDataTable')\n\nexport const VDataTable = genericComponent<VDataTableSlots>()({\n  name: 'VDataTable',\n\n  props: makeVDataTableProps(),\n\n  emits: {\n    'update:modelValue': (value: any[]) => true,\n    'update:page': (value: number) => true,\n    'update:itemsPerPage': (value: number) => true,\n    'update:sortBy': (value: any) => true,\n    'update:options': (value: any) => true,\n    'update:groupBy': (value: any) => true,\n    'update:expanded': (value: any) => true,\n  },\n\n  setup (props, { emit, slots }) {\n    const { groupBy } = createGroupBy(props)\n    const { sortBy, multiSort, mustSort } = createSort(props)\n    const { page, itemsPerPage } = createPagination(props)\n\n    const { columns, headers } = createHeaders(props, {\n      groupBy,\n      showSelect: toRef(props, 'showSelect'),\n      showExpand: toRef(props, 'showExpand'),\n    })\n\n    const { items } = useDataTableItems(props, columns)\n\n    const search = toRef(props, 'search')\n    const { filteredItems } = useFilter(props, items, search, { transform: item => item.columns })\n\n    const { toggleSort } = provideSort({ sortBy, multiSort, mustSort, page })\n    const { sortByWithGroups, opened, extractRows, isGroupOpen, toggleGroup } = provideGroupBy({ groupBy, sortBy })\n\n    const { sortedItems } = useSortedItems(props, filteredItems, sortByWithGroups)\n    const { flatItems } = useGroupedItems(sortedItems, groupBy, opened)\n    const itemsLength = computed(() => flatItems.value.length)\n\n    const { startIndex, stopIndex, pageCount, setItemsPerPage } = providePagination({ page, itemsPerPage, itemsLength })\n    const { paginatedItems } = usePaginatedItems({ items: flatItems, startIndex, stopIndex, itemsPerPage })\n\n    const paginatedItemsWithoutGroups = computed(() => extractRows(paginatedItems.value))\n\n    const {\n      isSelected,\n      select,\n      selectAll,\n      toggleSelect,\n      someSelected,\n      allSelected,\n    } = provideSelection(props, { allItems: items, currentPage: paginatedItemsWithoutGroups })\n\n    const { isExpanded, toggleExpand } = provideExpanded(props)\n\n    useOptions({\n      page,\n      itemsPerPage,\n      sortBy,\n      groupBy,\n      search,\n    })\n\n    provideDefaults({\n      VDataTableRows: {\n        hideNoData: toRef(props, 'hideNoData'),\n        noDataText: toRef(props, 'noDataText'),\n        loading: toRef(props, 'loading'),\n        loadingText: toRef(props, 'loadingText'),\n      },\n    })\n\n    const slotProps = computed<VDataTableSlotProps>(() => ({\n      page: page.value,\n      itemsPerPage: itemsPerPage.value,\n      sortBy: sortBy.value,\n      pageCount: pageCount.value,\n      toggleSort,\n      setItemsPerPage,\n      someSelected: someSelected.value,\n      allSelected: allSelected.value,\n      isSelected,\n      select,\n      selectAll,\n      toggleSelect,\n      isExpanded,\n      toggleExpand,\n      isGroupOpen,\n      toggleGroup,\n      items: paginatedItemsWithoutGroups.value,\n      groupedItems: paginatedItems.value,\n      columns: columns.value,\n      headers: headers.value,\n    }))\n\n    useRender(() => {\n      const [dataTableFooterProps] = VDataTableFooter.filterProps(props)\n      const [dataTableHeadersProps] = VDataTableHeaders.filterProps(props)\n      const [dataTableRowsProps] = VDataTableRows.filterProps(props)\n      const [tableProps] = VTable.filterProps(props)\n\n      return (\n        <VTable\n          class={[\n            'v-data-table',\n            {\n              'v-data-table--show-select': props.showSelect,\n              'v-data-table--loading': props.loading,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          { ...tableProps }\n        >\n          {{\n            top: () => slots.top?.(slotProps.value),\n            default: () => slots.default ? slots.default(slotProps.value) : (\n              <>\n                { slots.colgroup?.(slotProps.value) }\n                <thead>\n                  <VDataTableHeaders\n                    { ...dataTableHeadersProps }\n                    v-slots={ slots }\n                  />\n                </thead>\n                { slots.thead?.(slotProps.value) }\n                <tbody>\n                  { slots.body ? slots.body(slotProps.value) : (\n                    <VDataTableRows\n                      { ...dataTableRowsProps }\n                      items={ paginatedItems.value }\n                      v-slots={ slots }\n                    />\n                  )}\n                </tbody>\n                { slots.tbody?.(slotProps.value) }\n                { slots.tfoot?.(slotProps.value) }\n              </>\n            ),\n            bottom: () => slots.bottom ? slots.bottom(slotProps.value) : (\n              <>\n                <VDataTableFooter\n                  { ...dataTableFooterProps }\n                  v-slots={{\n                    prepend: slots['footer.prepend'],\n                  }}\n                />\n              </>\n            ),\n          }}\n        </VTable>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VDataTable = InstanceType<typeof VDataTable>\n", "// Styles\nimport './VDataTableFooter.sass'\n\n// Components\nimport { VBtn } from '@/components/VBtn'\nimport { VSelect } from '@/components/VSelect'\n\n// Composables\nimport { usePagination } from './composables/paginate'\nimport { useLocale } from '@/composables/locale'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const makeVDataTableFooterProps = propsFactory({\n  prevIcon: {\n    type: String,\n    default: '$prev',\n  },\n  nextIcon: {\n    type: String,\n    default: '$next',\n  },\n  firstIcon: {\n    type: String,\n    default: '$first',\n  },\n  lastIcon: {\n    type: String,\n    default: '$last',\n  },\n  itemsPerPageText: {\n    type: String,\n    default: '$vuetify.dataFooter.itemsPerPageText',\n  },\n  pageText: {\n    type: String,\n    default: '$vuetify.dataFooter.pageText',\n  },\n  firstPageLabel: {\n    type: String,\n    default: '$vuetify.dataFooter.firstPage',\n  },\n  prevPageLabel: {\n    type: String,\n    default: '$vuetify.dataFooter.prevPage',\n  },\n  nextPageLabel: {\n    type: String,\n    default: '$vuetify.dataFooter.nextPage',\n  },\n  lastPageLabel: {\n    type: String,\n    default: '$vuetify.dataFooter.lastPage',\n  },\n  itemsPerPageOptions: {\n    type: Array as PropType<readonly { title: string, value: number }[]>,\n    default: () => ([\n      { value: 10, title: '10' },\n      { value: 25, title: '25' },\n      { value: 50, title: '50' },\n      { value: 100, title: '100' },\n      { value: -1, title: '$vuetify.dataFooter.itemsPerPageAll' },\n    ]),\n  },\n  showCurrentPage: Boolean,\n}, 'VDataTableFooter')\n\nexport const VDataTableFooter = genericComponent<{ prepend: never }>()({\n  name: 'VDataTableFooter',\n\n  props: makeVDataTableFooterProps(),\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const { page, pageCount, startIndex, stopIndex, itemsLength, itemsPerPage, setItemsPerPage } = usePagination()\n\n    const itemsPerPageOptions = computed(() => (\n      props.itemsPerPageOptions.map(option => ({\n        ...option,\n        title: t(option.title),\n      }))\n    ))\n\n    return () => (\n      <div\n        class=\"v-data-table-footer\"\n      >\n        { slots.prepend?.() }\n        <div class=\"v-data-table-footer__items-per-page\">\n          <span>{ t(props.itemsPerPageText) }</span>\n          <VSelect\n            items={ itemsPerPageOptions.value }\n            modelValue={ itemsPerPage.value }\n            onUpdate:modelValue={ v => setItemsPerPage(Number(v)) }\n            density=\"compact\"\n            variant=\"outlined\"\n            hide-details\n          />\n        </div>\n        <div class=\"v-data-table-footer__info\">\n          <div>\n            { t(props.pageText, !itemsLength.value ? 0 : startIndex.value + 1, stopIndex.value, itemsLength.value) }\n          </div>\n        </div>\n        <div class=\"v-data-table-footer__pagination\">\n          <VBtn\n            icon={ props.firstIcon }\n            variant=\"plain\"\n            onClick={ () => page.value = 1 }\n            disabled={ page.value === 1 }\n            aria-label={ t(props.firstPageLabel) }\n          />\n          <VBtn\n            icon={ props.prevIcon }\n            variant=\"plain\"\n            onClick={ () => page.value = Math.max(1, page.value - 1) }\n            disabled={ page.value === 1 }\n            aria-label={ t(props.prevPageLabel) }\n          />\n          { props.showCurrentPage && (\n            <span key=\"page\" class=\"v-data-table-footer__page\">{ page.value }</span>\n          )}\n          <VBtn\n            icon={ props.nextIcon }\n            variant=\"plain\"\n            onClick={ () => page.value = Math.min(pageCount.value, page.value + 1) }\n            disabled={ page.value === pageCount.value }\n            aria-label={ t(props.nextPageLabel) }\n          />\n          <VBtn\n            icon={ props.lastIcon }\n            variant=\"plain\"\n            onClick={ () => page.value = pageCount.value }\n            disabled={ page.value === pageCount.value }\n            aria-label={ t(props.lastPageLabel) }\n          />\n        </div>\n      </div>\n    )\n  },\n})\n", "// Composables\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, inject, provide, watchEffect } from 'vue'\nimport { clamp, propsFactory } from '@/util'\n\n// Types\nimport type { InjectionKey, Ref } from 'vue'\nimport type { Group } from './group'\n\nexport const makeDataTablePaginateProps = propsFactory({\n  page: {\n    type: [Number, String],\n    default: 1,\n  },\n  itemsPerPage: {\n    type: [Number, String],\n    default: 10,\n  },\n}, 'DataTable-paginate')\n\nconst VDataTablePaginationSymbol: InjectionKey<{\n  page: Ref<number>\n  itemsPerPage: Ref<number>\n  startIndex: Ref<number>\n  stopIndex: Ref<number>\n  pageCount: Ref<number>\n  itemsLength: Ref<number>\n  prevPage: () => void\n  nextPage: () => void\n  setPage: (value: number) => void\n  setItemsPerPage: (value: number) => void\n}> = Symbol.for('vuetify:data-table-pagination')\n\ntype PaginationProps = {\n  page: number | string\n  'onUpdate:page': ((val: any) => void) | undefined\n  itemsPerPage: number | string\n  'onUpdate:itemsPerPage': ((val: any) => void) | undefined\n  itemsLength?: number | string\n}\n\nexport function createPagination (props: PaginationProps) {\n  const page = useProxiedModel(props, 'page', undefined, value => +(value ?? 1))\n  const itemsPerPage = useProxiedModel(props, 'itemsPerPage', undefined, value => +(value ?? 10))\n\n  return { page, itemsPerPage }\n}\n\nexport function providePagination (options: {\n  page: Ref<number>\n  itemsPerPage: Ref<number>\n  itemsLength: Ref<number>\n}) {\n  const { page, itemsPerPage, itemsLength } = options\n\n  const startIndex = computed(() => {\n    if (itemsPerPage.value === -1) return 0\n\n    return itemsPerPage.value * (page.value - 1)\n  })\n  const stopIndex = computed(() => {\n    if (itemsPerPage.value === -1) return itemsLength.value\n\n    return Math.min(itemsLength.value, startIndex.value + itemsPerPage.value)\n  })\n\n  const pageCount = computed(() => {\n    if (itemsPerPage.value === -1 || itemsLength.value === 0) return 1\n\n    return Math.ceil(itemsLength.value / itemsPerPage.value)\n  })\n\n  watchEffect(() => {\n    if (page.value > pageCount.value) {\n      page.value = pageCount.value\n    }\n  })\n\n  function setItemsPerPage (value: number) {\n    itemsPerPage.value = value\n    page.value = 1\n  }\n\n  function nextPage () {\n    page.value = clamp(page.value + 1, 1, pageCount.value)\n  }\n\n  function prevPage () {\n    page.value = clamp(page.value - 1, 1, pageCount.value)\n  }\n\n  function setPage (value: number) {\n    page.value = clamp(value, 1, pageCount.value)\n  }\n\n  const data = { page, itemsPerPage, startIndex, stopIndex, pageCount, itemsLength, nextPage, prevPage, setPage, setItemsPerPage }\n\n  provide(VDataTablePaginationSymbol, data)\n\n  return data\n}\n\nexport function usePagination () {\n  const data = inject(VDataTablePaginationSymbol)\n\n  if (!data) throw new Error('Missing pagination!')\n\n  return data\n}\n\nexport function usePaginatedItems <T> (options: {\n  items: Ref<readonly (T | Group<T>)[]>\n  startIndex: Ref<number>\n  stopIndex: Ref<number>\n  itemsPerPage: Ref<number>\n}) {\n  const { items, startIndex, stopIndex, itemsPerPage } = options\n  const paginatedItems = computed(() => {\n    if (itemsPerPage.value <= 0) return items.value\n\n    return items.value.slice(startIndex.value, stopIndex.value)\n  })\n\n  return { paginatedItems }\n}\n", "// Utilities\nimport { convertToUnit, defineFunctionalComponent } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const VDataTableColumn = defineFunctionalComponent({\n  align: {\n    type: String as PropType<'start' | 'center' | 'end'>,\n    default: 'start',\n  },\n  fixed: Boolean,\n  fixedOffset: [Number, String],\n  height: [Number, String],\n  lastFixed: Boolean,\n  noPadding: Boolean,\n  tag: String,\n  width: [Number, String],\n}, (props, { slots, attrs }) => {\n  const Tag = props.tag ?? 'td'\n  return (\n    <Tag\n      class={[\n        'v-data-table__td',\n        {\n          'v-data-table-column--fixed': props.fixed,\n          'v-data-table-column--last-fixed': props.lastFixed,\n          'v-data-table-column--no-padding': props.noPadding,\n        },\n        `v-data-table-column--align-${props.align}`,\n      ]}\n      style={{\n        height: convertToUnit(props.height),\n        width: convertToUnit(props.width),\n        left: convertToUnit(props.fixedOffset || null),\n      }}\n      { ...attrs }\n    >\n      { slots.default?.() }\n    </Tag>\n  )\n})\n", "// Utilities\nimport { inject, provide, ref, watchEffect } from 'vue'\nimport { consoleWarn, createRange, propsFactory } from '@/util'\n\n// Types\nimport type { DeepReadonly, InjectionKey, PropType, Ref } from 'vue'\nimport type { SortItem } from './sort'\nimport type { DataTableHeader, InternalDataTableHeader } from '../types'\n\nexport const makeDataTableHeaderProps = propsFactory({\n  headers: {\n    type: Array as PropType<DeepReadonly<DataTableHeader[] | DataTableHeader[][]>>,\n    default: () => ([]),\n  },\n}, 'DataTable-header')\n\nexport const VDataTableHeadersSymbol: InjectionKey<{\n  headers: Ref<InternalDataTableHeader[][]>\n  columns: Ref<InternalDataTableHeader[]>\n}> = Symbol.for('vuetify:data-table-headers')\n\ntype HeaderProps = {\n  headers: DeepReadonly<DataTableHeader[] | DataTableHeader[][]>\n}\n\nexport function createHeaders (\n  props: HeaderProps,\n  options?: {\n    groupBy?: Ref<readonly SortItem[]>\n    showSelect?: Ref<boolean>\n    showExpand?: Ref<boolean>\n  }\n) {\n  const headers = ref<InternalDataTableHeader[][]>([])\n  const columns = ref<InternalDataTableHeader[]>([])\n\n  watchEffect(() => {\n    const wrapped = !props.headers.length\n      ? []\n      : Array.isArray(props.headers[0])\n        ? props.headers as DataTableHeader[][]\n        : [props.headers as DataTableHeader[]]\n    const flat = wrapped.flatMap((row, index) => row.map(column => ({ column, row: index })))\n\n    const rowCount = wrapped.length\n    const defaultHeader = { title: '', sortable: false }\n    const defaultActionHeader = { ...defaultHeader, width: 48 }\n\n    if (options?.groupBy?.value.length) {\n      const index = flat.findIndex(({ column }) => column.key === 'data-table-group')\n      if (index < 0) flat.unshift({ column: { ...defaultHeader, key: 'data-table-group', title: 'Group', rowspan: rowCount }, row: 0 })\n      else flat.splice(index, 1, { column: { ...defaultHeader, ...flat[index].column }, row: flat[index].row })\n    }\n\n    if (options?.showSelect?.value) {\n      const index = flat.findIndex(({ column }) => column.key === 'data-table-select')\n      if (index < 0) flat.unshift({ column: { ...defaultActionHeader, key: 'data-table-select', rowspan: rowCount }, row: 0 })\n      else flat.splice(index, 1, { column: { ...defaultActionHeader, ...flat[index].column }, row: flat[index].row })\n    }\n\n    if (options?.showExpand?.value) {\n      const index = flat.findIndex(({ column }) => column.key === 'data-table-expand')\n      if (index < 0) flat.push({ column: { ...defaultActionHeader, key: 'data-table-expand', rowspan: rowCount }, row: 0 })\n      else flat.splice(index, 1, { column: { ...defaultActionHeader, ...flat[index].column }, row: flat[index].row })\n    }\n\n    const fixedRows: InternalDataTableHeader[][] = createRange(rowCount).map(() => [])\n    const fixedOffsets = createRange(rowCount).fill(0)\n\n    flat.forEach(({ column, row }) => {\n      let key = column.key\n      if (key == null) {\n        consoleWarn('The header key value must not be null or undefined')\n        key = ''\n      }\n      for (let i = row; i <= row + (column.rowspan ?? 1) - 1; i++) {\n        fixedRows[i].push({\n          ...column,\n          key,\n          fixedOffset: fixedOffsets[i],\n          sortable: column.sortable ?? !!column.key,\n        })\n\n        fixedOffsets[i] += Number(column.width ?? 0)\n      }\n    })\n\n    fixedRows.forEach(row => {\n      for (let i = row.length; i--; i >= 0) {\n        if (row[i].fixed) {\n          row[i].lastFixed = true\n          return\n        }\n      }\n    })\n\n    const seen = new Set()\n    headers.value = fixedRows.map(row => {\n      const filtered = []\n      for (const column of row) {\n        if (!seen.has(column.key)) {\n          seen.add(column.key)\n          filtered.push(column)\n        }\n      }\n\n      return filtered\n    })\n\n    columns.value = fixedRows.at(-1) ?? []\n  })\n\n  const data = { headers, columns }\n\n  provide(VDataTableHeadersSymbol, data)\n\n  return data\n}\n\nexport function useHeaders () {\n  const data = inject(VDataTableHeadersSymbol)\n\n  if (!data) throw new Error('Missing headers!')\n\n  return data\n}\n", "// Composables\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, inject, provide } from 'vue'\nimport { propsFactory, wrapInArray } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType, Ref } from 'vue'\nimport type { DataTableItemProps } from './items'\n\nexport interface SelectableItem {\n  value: any\n  selectable: boolean\n}\n\nexport interface DataTableSelectStrategy {\n  showSelectAll: boolean\n  allSelected: (data: {\n    allItems: SelectableItem[]\n    currentPage: SelectableItem[]\n  }) => SelectableItem[]\n  select: (data: {\n    items: SelectableItem[]\n    value: boolean\n    selected: Set<unknown>\n  }) => Set<unknown>\n  selectAll: (data: {\n    value: boolean\n    allItems: SelectableItem[]\n    currentPage: SelectableItem[]\n    selected: Set<unknown>\n  }) => Set<unknown>\n}\n\ntype SelectionProps = Pick<DataTableItemProps, 'itemValue'> & {\n  modelValue: readonly any[]\n  selectStrategy: 'single' | 'page' | 'all'\n  'onUpdate:modelValue': ((value: any[]) => void) | undefined\n}\n\nconst singleSelectStrategy: DataTableSelectStrategy = {\n  showSelectAll: false,\n  allSelected: () => [],\n  select: ({ items, value }) => {\n    return new Set(value ? [items[0]?.value] : [])\n  },\n  selectAll: ({ selected }) => selected,\n}\n\nconst pageSelectStrategy: DataTableSelectStrategy = {\n  showSelectAll: true,\n  allSelected: ({ currentPage }) => currentPage,\n  select: ({ items, value, selected }) => {\n    for (const item of items) {\n      if (value) selected.add(item.value)\n      else selected.delete(item.value)\n    }\n\n    return selected\n  },\n  selectAll: ({ value, currentPage, selected }) => pageSelectStrategy.select({ items: currentPage, value, selected }),\n}\n\nconst allSelectStrategy: DataTableSelectStrategy = {\n  showSelectAll: true,\n  allSelected: ({ allItems }) => allItems,\n  select: ({ items, value, selected }) => {\n    for (const item of items) {\n      if (value) selected.add(item.value)\n      else selected.delete(item.value)\n    }\n\n    return selected\n  },\n  selectAll: ({ value, allItems, selected }) => allSelectStrategy.select({ items: allItems, value, selected }),\n}\n\nexport const makeDataTableSelectProps = propsFactory({\n  showSelect: Boolean,\n  selectStrategy: {\n    type: [String, Object] as PropType<'single' | 'page' | 'all'>,\n    default: 'page',\n  },\n  modelValue: {\n    type: Array as PropType<readonly any[]>,\n    default: () => ([]),\n  },\n}, 'DataTable-select')\n\nexport const VDataTableSelectionSymbol: InjectionKey<ReturnType<typeof provideSelection>> = Symbol.for('vuetify:data-table-selection')\n\nexport function provideSelection (\n  props: SelectionProps,\n  { allItems, currentPage }: { allItems: Ref<SelectableItem[]>, currentPage: Ref<SelectableItem[]> }\n) {\n  const selected = useProxiedModel(props, 'modelValue', props.modelValue, v => {\n    return new Set(v)\n  }, v => {\n    return [...v.values()]\n  })\n\n  const allSelectable = computed(() => allItems.value.filter(item => item.selectable))\n  const currentPageSelectable = computed(() => currentPage.value.filter(item => item.selectable))\n\n  const selectStrategy = computed(() => {\n    if (typeof props.selectStrategy === 'object') return props.selectStrategy\n\n    switch (props.selectStrategy) {\n      case 'single': return singleSelectStrategy\n      case 'all': return allSelectStrategy\n      case 'page':\n      default: return pageSelectStrategy\n    }\n  })\n\n  function isSelected (items: SelectableItem | SelectableItem[]) {\n    return wrapInArray(items).every(item => selected.value.has(item.value))\n  }\n\n  function isSomeSelected (items: SelectableItem | SelectableItem[]) {\n    return wrapInArray(items).some(item => selected.value.has(item.value))\n  }\n\n  function select (items: SelectableItem[], value: boolean) {\n    const newSelected = selectStrategy.value.select({\n      items,\n      value,\n      selected: new Set(selected.value),\n    })\n\n    selected.value = newSelected\n  }\n\n  function toggleSelect (item: SelectableItem) {\n    select([item], !isSelected([item]))\n  }\n\n  function selectAll (value: boolean) {\n    const newSelected = selectStrategy.value.selectAll({\n      value,\n      allItems: allSelectable.value,\n      currentPage: currentPageSelectable.value,\n      selected: new Set(selected.value),\n    })\n\n    selected.value = newSelected\n  }\n\n  const someSelected = computed(() => selected.value.size > 0)\n  const allSelected = computed(() => {\n    const items = selectStrategy.value.allSelected({\n      allItems: allSelectable.value,\n      currentPage: currentPageSelectable.value,\n    })\n    return isSelected(items)\n  })\n\n  const data = {\n    toggleSelect,\n    select,\n    selectAll,\n    isSelected,\n    isSomeSelected,\n    someSelected,\n    allSelected,\n    showSelectAll: selectStrategy.value.showSelectAll,\n  }\n\n  provide(VDataTableSelectionSymbol, data)\n\n  return data\n}\n\nexport function useSelection () {\n  const data = inject(VDataTableSelectionSymbol)\n\n  if (!data) throw new Error('Missing selection!')\n\n  return data\n}\n", "// Composables\nimport { useLocale } from '@/composables'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, inject, provide, toRef } from 'vue'\nimport { getObjectValueByPath, isEmpty, propsFactory } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType, Ref } from 'vue'\nimport type { DataTableCompareFunction, InternalDataTableHeader } from '../types'\n\nexport const makeDataTableSortProps = propsFactory({\n  sortBy: {\n    type: Array as PropType<readonly SortItem[]>,\n    default: () => ([]),\n  },\n  customKeySort: Object as PropType<Record<string, DataTableCompareFunction>>,\n  multiSort: Boolean,\n  mustSort: Boolean,\n}, 'DataTable-sort')\n\nconst VDataTableSortSymbol: InjectionKey<{\n  sortBy: Ref<readonly SortItem[]>\n  toggleSort: (column: InternalDataTableHeader) => void\n  isSorted: (column: InternalDataTableHeader) => boolean\n}> = Symbol.for('vuetify:data-table-sort')\n\nexport type SortItem = { key: string, order?: boolean | 'asc' | 'desc' }\n\ntype SortProps = {\n  sortBy: readonly SortItem[]\n  'onUpdate:sortBy': ((value: any) => void) | undefined\n  mustSort: boolean\n  multiSort: boolean\n}\n\nexport function createSort (props: SortProps) {\n  const sortBy = useProxiedModel(props, 'sortBy')\n  const mustSort = toRef(props, 'mustSort')\n  const multiSort = toRef(props, 'multiSort')\n\n  return { sortBy, mustSort, multiSort }\n}\n\nexport function provideSort (options: {\n  sortBy: Ref<readonly SortItem[]>\n  mustSort: Ref<boolean>\n  multiSort: Ref<boolean>\n  page?: Ref<number>\n}) {\n  const { sortBy, mustSort, multiSort, page } = options\n\n  const toggleSort = (column: InternalDataTableHeader) => {\n    let newSortBy = sortBy.value.map(x => ({ ...x })) ?? []\n    const item = newSortBy.find(x => x.key === column.key)\n\n    if (!item) {\n      if (multiSort.value) newSortBy = [...newSortBy, { key: column.key, order: 'asc' }]\n      else newSortBy = [{ key: column.key, order: 'asc' }]\n    } else if (item.order === 'desc') {\n      if (mustSort.value) {\n        item.order = 'asc'\n      } else {\n        newSortBy = newSortBy.filter(x => x.key !== column.key)\n      }\n    } else {\n      item.order = 'desc'\n    }\n\n    sortBy.value = newSortBy\n    if (page) page.value = 1\n  }\n\n  function isSorted (column: InternalDataTableHeader) {\n    return !!sortBy.value.find(item => item.key === column.key)\n  }\n\n  const data = { sortBy, toggleSort, isSorted }\n\n  provide(VDataTableSortSymbol, data)\n\n  return data\n}\n\nexport function useSort () {\n  const data = inject(VDataTableSortSymbol)\n\n  if (!data) throw new Error('Missing sort!')\n\n  return data\n}\n\nexport function useSortedItems <T extends Record<string, any>> (\n  props: { customKeySort?: Record<string, DataTableCompareFunction> },\n  items: Ref<T[]>,\n  sortBy: Ref<readonly SortItem[]>,\n) {\n  const locale = useLocale()\n  const sortedItems = computed(() => {\n    if (!sortBy.value.length) return items.value\n\n    return sortItems(items.value, sortBy.value, locale.current.value, props.customKeySort)\n  })\n\n  return { sortedItems }\n}\n\nexport function sortItems<T extends Record<string, any>> (\n  items: T[],\n  sortByItems: readonly SortItem[],\n  locale: string,\n  customSorters?: Record<string, DataTableCompareFunction>\n): T[] {\n  const stringCollator = new Intl.Collator(locale, { sensitivity: 'accent', usage: 'sort' })\n\n  return [...items].sort((a, b) => {\n    for (let i = 0; i < sortByItems.length; i++) {\n      const sortKey = sortByItems[i].key\n      const sortOrder = sortByItems[i].order ?? 'asc'\n\n      if (sortOrder === false) continue\n\n      let sortA = getObjectValueByPath(a.raw, sortKey)\n      let sortB = getObjectValueByPath(b.raw, sortKey)\n\n      if (sortOrder === 'desc') {\n        [sortA, sortB] = [sortB, sortA]\n      }\n\n      if (customSorters?.[sortKey]) {\n        const customResult = customSorters[sortKey](sortA, sortB)\n\n        if (!customResult) continue\n\n        return customResult\n      }\n\n      // Dates should be compared numerically\n      if (sortA instanceof Date && sortB instanceof Date) {\n        return sortA.getTime() - sortB.getTime()\n      }\n\n      [sortA, sortB] = [sortA, sortB].map(s => s != null ? s.toString().toLocaleLowerCase() : s)\n\n      if (sortA !== sortB) {\n        if (isEmpty(sortA) && isEmpty(sortB)) return 0\n        if (isEmpty(sortA)) return -1\n        if (isEmpty(sortB)) return 1\n        if (!isNaN(sortA) && !isNaN(sortB)) return Number(sortA) - Number(sortB)\n        return stringCollator.compare(sortA, sortB)\n      }\n    }\n\n    return 0\n  })\n}\n", "// Components\nimport { VDataTableColumn } from './VDataTableColumn'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { useHeaders } from './composables/headers'\nimport { useSelection } from './composables/select'\nimport { useSort } from './composables/sort'\nimport { useBackgroundColor } from '@/composables/color'\nimport { IconValue } from '@/composables/icons'\nimport { LoaderSlot, makeLoaderProps, useLoader } from '@/composables/loader'\n\n// Utilities\nimport { computed } from 'vue'\nimport { convertToUnit, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { CSSProperties, UnwrapRef } from 'vue'\nimport type { provideSelection } from './composables/select'\nimport type { provideSort } from './composables/sort'\nimport type { InternalDataTableHeader } from './types'\nimport type { LoaderSlotProps } from '@/composables/loader'\n\nexport type HeadersSlotProps = {\n  headers: InternalDataTableHeader[][]\n  columns: InternalDataTableHeader[]\n  sortBy: UnwrapRef<ReturnType<typeof provideSort>['sortBy']>\n  someSelected: UnwrapRef<ReturnType<typeof provideSelection>['someSelected']>\n  allSelected: UnwrapRef<ReturnType<typeof provideSelection>['allSelected']>\n  toggleSort: ReturnType<typeof provideSort>['toggleSort']\n  selectAll: ReturnType<typeof provideSelection>['selectAll']\n  getSortIcon: (column: InternalDataTableHeader) => IconValue\n  getFixedStyles: (column: InternalDataTableHeader, y: number) => CSSProperties | undefined\n  isSorted: ReturnType<typeof provideSort>['isSorted']\n}\n\ntype VDataTableHeaderCellColumnSlotProps = {\n  column: InternalDataTableHeader\n  selectAll: ReturnType<typeof provideSelection>['selectAll']\n  isSorted: ReturnType<typeof provideSort>['isSorted']\n  toggleSort: ReturnType<typeof provideSort>['toggleSort']\n  sortBy: UnwrapRef<ReturnType<typeof provideSort>['sortBy']>\n  someSelected: UnwrapRef<ReturnType<typeof provideSelection>['someSelected']>\n  allSelected: UnwrapRef<ReturnType<typeof provideSelection>['allSelected']>\n  getSortIcon: (column: InternalDataTableHeader) => IconValue\n}\n\nexport type VDataTableHeadersSlots = {\n  headers: HeadersSlotProps\n  loader: LoaderSlotProps\n  'column.data-table-select': VDataTableHeaderCellColumnSlotProps\n  'column.data-table-expand': VDataTableHeaderCellColumnSlotProps\n} & { [key: `column.${string}`]: VDataTableHeaderCellColumnSlotProps }\n\nexport const makeVDataTableHeadersProps = propsFactory({\n  color: String,\n  sticky: Boolean,\n  multiSort: Boolean,\n  sortAscIcon: {\n    type: IconValue,\n    default: '$sortAsc',\n  },\n  sortDescIcon: {\n    type: IconValue,\n    default: '$sortDesc',\n  },\n\n  ...makeLoaderProps(),\n}, 'VDataTableHeaders')\n\nexport const VDataTableHeaders = genericComponent<VDataTableHeadersSlots>()({\n  name: 'VDataTableHeaders',\n\n  props: makeVDataTableHeadersProps(),\n\n  setup (props, { slots, emit }) {\n    const { toggleSort, sortBy, isSorted } = useSort()\n    const { someSelected, allSelected, selectAll, showSelectAll } = useSelection()\n    const { columns, headers } = useHeaders()\n    const { loaderClasses } = useLoader(props)\n\n    const getFixedStyles = (column: InternalDataTableHeader, y: number): CSSProperties | undefined => {\n      if (!props.sticky && !column.fixed) return undefined\n\n      return {\n        position: 'sticky',\n        zIndex: column.fixed ? 4 : props.sticky ? 3 : undefined, // TODO: This needs to account for possible previous fixed columns.\n        left: column.fixed ? convertToUnit(column.fixedOffset) : undefined, // TODO: This needs to account for possible row/colspan of previous columns\n        top: props.sticky ? `calc(var(--v-table-header-height) * ${y})` : undefined,\n      }\n    }\n\n    function getSortIcon (column: InternalDataTableHeader) {\n      const item = sortBy.value.find(item => item.key === column.key)\n\n      if (!item) return props.sortAscIcon\n\n      return item.order === 'asc' ? props.sortAscIcon : props.sortDescIcon\n    }\n\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(props, 'color')\n\n    const slotProps = computed(() => ({\n      headers: headers.value,\n      columns: columns.value,\n      toggleSort,\n      isSorted,\n      sortBy: sortBy.value,\n      someSelected: someSelected.value,\n      allSelected: allSelected.value,\n      selectAll,\n      getSortIcon,\n      getFixedStyles,\n    } satisfies HeadersSlotProps))\n\n    const VDataTableHeaderCell = ({ column, x, y }: { column: InternalDataTableHeader, x: number, y: number }) => {\n      const noPadding = column.key === 'data-table-select' || column.key === 'data-table-expand'\n\n      return (\n        <VDataTableColumn\n          tag=\"th\"\n          align={ column.align }\n          class={[\n            'v-data-table__th',\n            {\n              'v-data-table__th--sortable': column.sortable,\n              'v-data-table__th--sorted': isSorted(column),\n            },\n            loaderClasses.value,\n          ]}\n          style={{\n            width: convertToUnit(column.width),\n            minWidth: convertToUnit(column.width),\n            ...getFixedStyles(column, y),\n          }}\n          colspan={ column.colspan }\n          rowspan={ column.rowspan }\n          onClick={ column.sortable ? () => toggleSort(column) : undefined }\n          lastFixed={ column.lastFixed }\n          noPadding={ noPadding }\n        >\n          {{\n            default: () => {\n              const columnSlotName = `column.${column.key}` as const\n              const columnSlotProps: VDataTableHeaderCellColumnSlotProps = {\n                column,\n                selectAll,\n                isSorted,\n                toggleSort,\n                sortBy: sortBy.value,\n                someSelected: someSelected.value,\n                allSelected: allSelected.value,\n                getSortIcon,\n              }\n\n              if (slots[columnSlotName]) return slots[columnSlotName]!(columnSlotProps)\n\n              if (column.key === 'data-table-select') {\n                return slots['column.data-table-select']?.(columnSlotProps) ?? (showSelectAll && (\n                  <VCheckboxBtn\n                    modelValue={ allSelected.value }\n                    indeterminate={ someSelected.value && !allSelected.value }\n                    onUpdate:modelValue={ selectAll }\n                  />\n                ))\n              }\n\n              return (\n                <div class=\"v-data-table-header__content\">\n                  <span>{ column.title }</span>\n                  { column.sortable && (\n                    <VIcon\n                      key=\"icon\"\n                      class=\"v-data-table-header__sort-icon\"\n                      icon={ getSortIcon(column) }\n                    />\n                  )}\n                  { props.multiSort && isSorted(column) && (\n                    <div\n                      key=\"badge\"\n                      class={[\n                        'v-data-table-header__sort-badge',\n                        ...backgroundColorClasses.value,\n                      ]}\n                      style={ backgroundColorStyles.value }\n                    >\n                      { sortBy.value.findIndex(x => x.key === column.key) + 1 }\n                    </div>\n                  )}\n                </div>\n              )\n            },\n          }}\n        </VDataTableColumn>\n      )\n    }\n\n    useRender(() => {\n      return (\n        <>\n          { slots.headers\n            ? slots.headers(slotProps.value)\n            : headers.value.map((row, y) => (\n            <tr>\n              { row.map((column, x) => (\n                <VDataTableHeaderCell column={ column } x={ x } y={ y } />\n              ))}\n            </tr>\n            ))}\n\n          { props.loading && (\n            <tr class=\"v-data-table-progress\">\n              <th colspan={ columns.value.length }>\n                <LoaderSlot\n                  name=\"v-data-table-progress\"\n                  active\n                  color={ typeof props.loading === 'boolean' ? undefined : props.loading }\n                  indeterminate\n                  v-slots={{ default: slots.loader }}\n                />\n              </th>\n            </tr>\n          )}\n        </>\n      )\n    })\n  },\n})\n", "// Composables\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, inject, provide, ref } from 'vue'\nimport { getObjectValueByPath, propsFactory } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType, Ref } from 'vue'\nimport type { SortItem } from './sort'\nimport type { DataTableItem } from '../types'\n\nexport interface GroupableItem<T = any> {\n  type: 'item'\n  raw: T\n}\n\nexport interface Group<T = any> {\n  type: 'group'\n  depth: number\n  id: string\n  key: string\n  value: any\n  items: readonly (T | Group<T>)[]\n}\n\nexport const makeDataTableGroupProps = propsFactory({\n  groupBy: {\n    type: Array as PropType<readonly SortItem[]>,\n    default: () => ([]),\n  },\n}, 'DataTable-group')\n\nconst VDataTableGroupSymbol: InjectionKey<{\n  opened: Ref<Set<string>>\n  toggleGroup: (group: Group) => void\n  isGroupOpen: (group: Group) => boolean\n  sortByWithGroups: Ref<SortItem[]>\n  groupBy: Ref<readonly SortItem[]>\n  extractRows: (items: (DataTableItem | Group<DataTableItem>)[]) => DataTableItem[]\n}> = Symbol.for('vuetify:data-table-group')\n\ntype GroupProps = {\n  groupBy: readonly SortItem[]\n  'onUpdate:groupBy': ((value: SortItem[]) => void) | undefined\n}\n\nexport function createGroupBy (props: GroupProps) {\n  const groupBy = useProxiedModel(props, 'groupBy')\n\n  return { groupBy }\n}\n\nexport function provideGroupBy (options: { groupBy: Ref<readonly SortItem[]>, sortBy: Ref<readonly SortItem[]> }) {\n  const { groupBy, sortBy } = options\n  const opened = ref(new Set<string>())\n\n  const sortByWithGroups = computed(() => {\n    return groupBy.value.map<SortItem>(val => ({\n      ...val,\n      order: val.order ?? false,\n    })).concat(sortBy.value)\n  })\n\n  function isGroupOpen (group: Group) {\n    return opened.value.has(group.id)\n  }\n\n  function toggleGroup (group: Group) {\n    const newOpened = new Set(opened.value)\n    if (!isGroupOpen(group)) newOpened.add(group.id)\n    else newOpened.delete(group.id)\n\n    opened.value = newOpened\n  }\n\n  function extractRows <T extends GroupableItem> (items: readonly (T | Group<T>)[]) {\n    function dive (group: Group<T>): T[] {\n      const arr = []\n\n      for (const item of group.items) {\n        if ('type' in item && item.type === 'group') {\n          arr.push(...dive(item))\n        } else {\n          arr.push(item as T)\n        }\n      }\n\n      return arr\n    }\n    return dive({ type: 'group', items, id: 'dummy', key: 'dummy', value: 'dummy', depth: 0 })\n  }\n\n  // onBeforeMount(() => {\n  //   for (const key of groupedItems.value.keys()) {\n  //     opened.value.add(key)\n  //   }\n  // })\n\n  const data = { sortByWithGroups, toggleGroup, opened, groupBy, extractRows, isGroupOpen }\n\n  provide(VDataTableGroupSymbol, data)\n\n  return data\n}\n\nexport function useGroupBy () {\n  const data = inject(VDataTableGroupSymbol)\n\n  if (!data) throw new Error('Missing group!')\n\n  return data\n}\n\nfunction groupItemsByProperty <T extends GroupableItem> (items: readonly T[], groupBy: string) {\n  if (!items.length) return []\n\n  const groups = new Map<any, T[]>()\n  for (const item of items) {\n    const value = getObjectValueByPath(item.raw, groupBy)\n\n    if (!groups.has(value)) {\n      groups.set(value, [])\n    }\n    groups.get(value)!.push(item)\n  }\n\n  return groups\n}\n\nfunction groupItems <T extends GroupableItem> (items: readonly T[], groupBy: readonly string[], depth = 0, prefix = 'root') {\n  if (!groupBy.length) return []\n\n  const groupedItems = groupItemsByProperty(items, groupBy[0])\n  const groups: Group<T>[] = []\n\n  const rest = groupBy.slice(1)\n  groupedItems.forEach((items, value) => {\n    const key = groupBy[0]\n    const id = `${prefix}_${key}_${value}`\n    groups.push({\n      depth,\n      id,\n      key,\n      value,\n      items: rest.length ? groupItems(items, rest, depth + 1, id) : items,\n      type: 'group',\n    })\n  })\n\n  return groups\n}\n\nfunction flattenItems <T extends GroupableItem> (items: readonly (T | Group<T>)[], opened: Set<string>): readonly (T | Group<T>)[] {\n  const flatItems: (T | Group<T>)[] = []\n\n  for (const item of items) {\n    // TODO: make this better\n    if ('type' in item && item.type === 'group') {\n      if (item.value != null) {\n        flatItems.push(item)\n      }\n\n      if (opened.has(item.id) || item.value == null) {\n        flatItems.push(...flattenItems(item.items, opened))\n      }\n    } else {\n      flatItems.push(item)\n    }\n  }\n\n  return flatItems\n}\n\nexport function useGroupedItems <T extends GroupableItem> (\n  items: Ref<T[]>,\n  groupBy: Ref<readonly SortItem[]>,\n  opened: Ref<Set<string>>\n) {\n  const flatItems = computed(() => {\n    if (!groupBy.value.length) return items.value\n\n    const groupedItems = groupItems(items.value, groupBy.value.map(item => item.key))\n\n    return flattenItems(groupedItems, opened.value)\n  })\n\n  return { flatItems }\n}\n", "// Components\nimport { VDataTableColumn } from './VDataTableColumn'\nimport { VBtn } from '@/components/VBtn'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\n\n// Composables\nimport { useGroupBy } from './composables/group'\nimport { useHeaders } from './composables/headers'\nimport { useSelection } from './composables/select'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { Group } from './composables/group'\n\nexport type VDataTableGroupHeaderRowSlots = {\n  'data-table-group': { item: Group, count: number, props: Record<string, unknown> }\n  'data-table-select': { props: Record<string, unknown> }\n}\n\nexport const makeVDataTableGroupHeaderRowProps = propsFactory({\n  item: {\n    type: Object as PropType<Group>,\n    required: true,\n  },\n}, 'VDataTableGroupHeaderRow')\n\nexport const VDataTableGroupHeaderRow = genericComponent<VDataTableGroupHeaderRowSlots>()({\n  name: 'VDataTableGroupHeaderRow',\n\n  props: makeVDataTableGroupHeaderRowProps(),\n\n  setup (props, { slots }) {\n    const { isGroupOpen, toggleGroup, extractRows } = useGroupBy()\n    const { isSelected, isSomeSelected, select } = useSelection()\n    const { columns } = useHeaders()\n\n    const rows = computed(() => {\n      return extractRows([props.item])\n    })\n\n    return () => (\n      <tr\n        class=\"v-data-table-group-header-row\"\n        style={{\n          '--v-data-table-group-header-row-depth': props.item.depth,\n        }}\n      >\n        { columns.value.map(column => {\n          if (column.key === 'data-table-group') {\n            const icon = isGroupOpen(props.item) ? '$expand' : '$next'\n            const onClick = () => toggleGroup(props.item)\n\n            return slots['data-table-group']?.({ item: props.item, count: rows.value.length, props: { icon, onClick } }) ?? (\n              <VDataTableColumn class=\"v-data-table-group-header-row__column\">\n                <VBtn\n                  size=\"small\"\n                  variant=\"text\"\n                  icon={ icon }\n                  onClick={ onClick }\n                />\n                <span>{ props.item.value }</span>\n                <span>({ rows.value.length })</span>\n              </VDataTableColumn>\n            )\n          }\n\n          if (column.key === 'data-table-select') {\n            const modelValue = isSelected(rows.value)\n            const indeterminate = isSomeSelected(rows.value) && !modelValue\n            const selectGroup = (v: boolean) => select(rows.value, v)\n            return slots['data-table-select']?.({ props: { modelValue, indeterminate, 'onUpdate:modelValue': selectGroup } }) ?? (\n              <td>\n                <VCheckboxBtn\n                  modelValue={ modelValue }\n                  indeterminate={ indeterminate }\n                  onUpdate:modelValue={ selectGroup }\n                />\n              </td>\n            )\n          }\n\n          return <td />\n        })}\n      </tr>\n    )\n  },\n})\n", "// Composables\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { inject, provide, toRef } from 'vue'\nimport { propsFactory } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType, Ref } from 'vue'\nimport type { DataTableItem } from '../types'\n\nexport const makeDataTableExpandProps = propsFactory({\n  expandOnClick: Boolean,\n  showExpand: Boolean,\n  expanded: {\n    type: Array as PropType<readonly string[]>,\n    default: () => ([]),\n  },\n}, 'DataTable-expand')\n\nexport const VDataTableExpandedKey: InjectionKey<{\n  expand: (item: DataTableItem, value: boolean) => void\n  expanded: Ref<Set<string>>\n  expandOnClick: Ref<boolean | undefined>\n  isExpanded: (item: DataTableItem) => boolean\n  toggleExpand: (item: DataTableItem) => void\n}> = Symbol.for('vuetify:datatable:expanded')\n\ntype ExpandProps = {\n  expandOnClick: boolean\n  expanded: readonly string[]\n  'onUpdate:expanded': ((value: any[]) => void) | undefined\n}\n\nexport function provideExpanded (props: ExpandProps) {\n  const expandOnClick = toRef(props, 'expandOnClick')\n  const expanded = useProxiedModel(props, 'expanded', props.expanded, v => {\n    return new Set(v)\n  }, v => {\n    return [...v.values()]\n  })\n\n  function expand (item: DataTableItem, value: boolean) {\n    const newExpanded = new Set(expanded.value)\n\n    if (!value) {\n      newExpanded.delete(item.value)\n    } else {\n      newExpanded.add(item.value)\n    }\n\n    expanded.value = newExpanded\n  }\n\n  function isExpanded (item: DataTableItem) {\n    return expanded.value.has(item.value)\n  }\n\n  function toggleExpand (item: DataTableItem) {\n    expand(item, !isExpanded(item))\n  }\n\n  const data = { expand, expanded, expandOnClick, isExpanded, toggleExpand }\n\n  provide(VDataTableExpandedKey, data)\n\n  return data\n}\n\nexport function useExpanded () {\n  const data = inject(VDataTableExpandedKey)\n\n  if (!data) throw new Error('foo')\n\n  return data\n}\n", "// Components\nimport { VBtn } from '@/components/VBtn'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\n\n// Composables\nimport { useExpanded } from './composables/expand'\nimport { useHeaders } from './composables/headers'\nimport { useSelection } from './composables/select'\nimport { VDataTableColumn } from './VDataTableColumn'\n\n// Utilities\nimport { withModifiers } from 'vue'\nimport { defineComponent, getPropertyFromItem, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { DataTableItem } from './types'\n\nexport const makeVDataTableRowProps = propsFactory({\n  index: Number as PropType<Number>,\n  item: Object as PropType<DataTableItem>,\n  onClick: Function as PropType<(e: MouseEvent) => void>,\n}, 'VDataTableRow')\n\nexport const VDataTableRow = defineComponent({\n  name: 'VDataTableRow',\n\n  props: makeVDataTableRowProps(),\n\n  setup (props, { slots }) {\n    const { isSelected, toggleSelect } = useSelection()\n    const { isExpanded, toggleExpand } = useExpanded()\n    const { columns } = useHeaders()\n\n    useRender(() => (\n      <tr\n        class={[\n          'v-data-table__tr',\n          {\n            'v-data-table__tr--clickable': !!props.onClick,\n          },\n        ]}\n        onClick={ props.onClick }\n      >\n        { props.item && columns.value.map((column, i) => (\n          <VDataTableColumn\n            align={ column.align }\n            fixed={ column.fixed }\n            fixedOffset={ column.fixedOffset }\n            lastFixed={ column.lastFixed }\n            noPadding={ column.key === 'data-table-select' || column.key === 'data-table-expand' }\n            width={ column.width }\n          >\n            {{\n              default: () => {\n                const item = props.item!\n                const slotName = `item.${column.key}`\n                const slotProps = {\n                  index: props.index,\n                  item: props.item,\n                  columns: columns.value,\n                  isSelected,\n                  toggleSelect,\n                  isExpanded,\n                  toggleExpand,\n                }\n\n                if (slots[slotName]) return slots[slotName]!(slotProps)\n\n                if (column.key === 'data-table-select') {\n                  return slots['item.data-table-select']?.(slotProps) ?? (\n                    <VCheckboxBtn\n                      disabled={ !item.selectable }\n                      modelValue={ isSelected([item]) }\n                      onClick={ withModifiers(() => toggleSelect(item), ['stop']) }\n                    />\n                  )\n                }\n\n                if (column.key === 'data-table-expand') {\n                  return slots['item.data-table-expand']?.(slotProps) ?? (\n                    <VBtn\n                      icon={ isExpanded(item) ? '$collapse' : '$expand' }\n                      size=\"small\"\n                      variant=\"text\"\n                      onClick={ withModifiers(() => toggleExpand(item), ['stop']) }\n                    />\n                  )\n                }\n\n                return getPropertyFromItem(item.columns, column.key)\n              },\n            }}\n          </VDataTableColumn>\n        ))}\n      </tr>\n    ))\n  },\n})\n\nexport type VDataTableRow = InstanceType<typeof VDataTableRow>\n", "// Components\nimport { VDataTableGroupHeaderRow } from './VDataTableGroupHeaderRow'\nimport { VDataTableRow } from './VDataTableRow'\n\n// Composables\nimport { useExpanded } from './composables/expand'\nimport { useGroupBy } from './composables/group'\nimport { useHeaders } from './composables/headers'\nimport { useSelection } from './composables/select'\nimport { useLocale } from '@/composables/locale'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { provideExpanded } from './composables/expand'\nimport type { Group, provideGroupBy } from './composables/group'\nimport type { provideSelection } from './composables/select'\nimport type { DataTableItem, InternalDataTableHeader } from './types'\nimport type { VDataTableGroupHeaderRowSlots } from './VDataTableGroupHeaderRow'\n\ntype GroupHeaderSlot = {\n  index: number\n  item: Group\n  columns: InternalDataTableHeader[]\n  isExpanded: ReturnType<typeof provideExpanded>['isExpanded']\n  toggleExpand: ReturnType<typeof provideExpanded>['toggleExpand']\n  isSelected: ReturnType<typeof provideSelection>['isSelected']\n  toggleSelect: ReturnType<typeof provideSelection>['toggleSelect']\n  toggleGroup: ReturnType<typeof provideGroupBy>['toggleGroup']\n  isGroupOpen: ReturnType<typeof provideGroupBy>['isGroupOpen']\n}\n\ntype ItemSlot = {\n  index: number\n  item: DataTableItem\n  columns: InternalDataTableHeader[]\n  isExpanded: ReturnType<typeof provideExpanded>['isExpanded']\n  toggleExpand: ReturnType<typeof provideExpanded>['toggleExpand']\n  isSelected: ReturnType<typeof provideSelection>['isSelected']\n  toggleSelect: ReturnType<typeof provideSelection>['toggleSelect']\n}\n\nexport type VDataTableRowsSlots = VDataTableGroupHeaderRowSlots & {\n  item: ItemSlot & { props: Record<string, any> }\n  loading: never\n  'group-header': GroupHeaderSlot\n  'no-data': never\n  'expanded-row': ItemSlot\n  'item.data-table-select': ItemSlot\n  'item.data-table-expand': ItemSlot\n} & { [key: `item.${string}`]: ItemSlot }\n\nexport const makeVDataTableRowsProps = propsFactory({\n  loading: [Boolean, String],\n  loadingText: {\n    type: String,\n    default: '$vuetify.dataIterator.loadingText',\n  },\n  hideNoData: Boolean,\n  items: {\n    type: Array as PropType<readonly (DataTableItem | Group)[]>,\n    default: () => ([]),\n  },\n  noDataText: {\n    type: String,\n    default: '$vuetify.noDataText',\n  },\n  rowHeight: Number,\n  'onClick:row': Function as PropType<(e: Event, value: { item: DataTableItem }) => void>,\n}, 'VDataTableRows')\n\nexport const VDataTableRows = genericComponent<VDataTableRowsSlots>()({\n  name: 'VDataTableRows',\n\n  props: makeVDataTableRowsProps(),\n\n  setup (props, { emit, slots }) {\n    const { columns } = useHeaders()\n    const { expandOnClick, toggleExpand, isExpanded } = useExpanded()\n    const { isSelected, toggleSelect } = useSelection()\n    const { toggleGroup, isGroupOpen } = useGroupBy()\n    const { t } = useLocale()\n\n    useRender(() => {\n      if (props.loading && slots.loading) {\n        return (\n          <tr\n            class=\"v-data-table-rows-loading\"\n            key=\"loading\"\n          >\n            <td colspan={ columns.value.length }>\n              { slots.loading() }\n            </td>\n          </tr>\n        )\n      }\n\n      if (!props.loading && !props.items.length && !props.hideNoData) {\n        return (\n          <tr\n            class=\"v-data-table-rows-no-data\"\n            key=\"no-data\"\n          >\n            <td colspan={ columns.value.length }>\n              { slots['no-data']?.() ?? t(props.noDataText) }\n            </td>\n          </tr>\n        )\n      }\n\n      return (\n        <>\n          { props.items.map((item, index) => {\n            if (item.type === 'group') {\n              return slots['group-header'] ? slots['group-header']({\n                index,\n                item,\n                columns: columns.value,\n                isExpanded,\n                toggleExpand,\n                isSelected,\n                toggleSelect,\n                toggleGroup,\n                isGroupOpen,\n              } as GroupHeaderSlot) : (\n                <VDataTableGroupHeaderRow\n                  key={ `group-header_${item.id}` }\n                  item={ item }\n                  v-slots={ slots }\n                />\n              )\n            }\n\n            const slotProps = {\n              index,\n              item,\n              columns: columns.value,\n              isExpanded,\n              toggleExpand,\n              isSelected,\n              toggleSelect,\n            } satisfies ItemSlot\n\n            const itemSlotProps = {\n              ...slotProps,\n              props: {\n                key: `item_${item.key ?? item.index}`,\n                onClick: expandOnClick.value || props['onClick:row'] ? (event: Event) => {\n                  if (expandOnClick.value) {\n                    toggleExpand(item)\n                  }\n                  props['onClick:row']?.(event, { item })\n                } : undefined,\n                index,\n                item,\n              },\n            }\n\n            return (\n              <>\n                { slots.item ? slots.item(itemSlotProps) : (\n                  <VDataTableRow\n                    { ...itemSlotProps.props }\n                    v-slots={ slots }\n                  />\n                )}\n\n                { isExpanded(item) && slots['expanded-row']?.(slotProps) }\n              </>\n            )\n          })}\n        </>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VDataTableRows = InstanceType<typeof VDataTableRows>\n", "// Utilities\nimport { computed } from 'vue'\nimport { getPropertyFromItem, propsFactory } from '@/util'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { DataTableItem, InternalDataTableHeader } from '../types'\nimport type { SelectItemKey } from '@/util'\n\nexport interface DataTableItemProps {\n  items: any[]\n  itemValue: SelectItemKey\n  itemSelectable: SelectItemKey\n  returnObject: boolean\n}\n\n// Composables\nexport const makeDataTableItemsProps = propsFactory({\n  items: {\n    type: Array as PropType<DataTableItemProps['items']>,\n    default: () => ([]),\n  },\n  itemValue: {\n    type: [String, Array, Function] as PropType<SelectItemKey>,\n    default: 'id',\n  },\n  itemSelectable: {\n    type: [String, Array, Function] as PropType<SelectItemKey>,\n    default: null,\n  },\n  returnObject: Boolean,\n}, 'DataTable-items')\n\nexport function transformItem (\n  props: Omit<DataTableItemProps, 'items'>,\n  item: any,\n  index: number,\n  columns: InternalDataTableHeader[]\n): DataTableItem {\n  const value = props.returnObject ? item : getPropertyFromItem(item, props.itemValue)\n  const selectable = getPropertyFromItem(item, props.itemSelectable, true)\n  const itemColumns = columns.reduce((obj, column) => {\n    obj[column.key] = getPropertyFromItem(item, column.value ?? column.key)\n    return obj\n  }, {} as Record<string, unknown>)\n\n  return {\n    type: 'item',\n    key: props.returnObject ? getPropertyFromItem(item, props.itemValue) : value,\n    index,\n    value,\n    selectable,\n    columns: itemColumns,\n    raw: item,\n  }\n}\n\nexport function transformItems (\n  props: Omit<DataTableItemProps, 'items'>,\n  items: DataTableItemProps['items'],\n  columns: InternalDataTableHeader[]\n): DataTableItem[] {\n  return items.map((item, index) => transformItem(props, item, index, columns))\n}\n\nexport function useDataTableItems (props: DataTableItemProps, columns: Ref<InternalDataTableHeader[]>) {\n  const items = computed(() => transformItems(props, props.items, columns.value))\n\n  return { items }\n}\n", "// Utilities\nimport { computed, watch } from 'vue'\nimport { deepEqual, getCurrentInstance } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\nimport type { SortItem } from './sort'\n\nexport function useOptions ({\n  page,\n  itemsPerPage,\n  sortBy,\n  groupBy,\n  search,\n}: {\n  page: Ref<number>\n  itemsPerPage: Ref<number>\n  sortBy: Ref<readonly SortItem[]>\n  groupBy: Ref<readonly SortItem[]>\n  search: Ref<string | undefined>\n}) {\n  const vm = getCurrentInstance('VDataTable')\n\n  const options = computed(() => ({\n    page: page.value,\n    itemsPerPage: itemsPerPage.value,\n    sortBy: sortBy.value,\n    groupBy: groupBy.value,\n    search: search.value,\n  }))\n\n  // Reset page when searching\n  watch(() => search?.value, () => {\n    page.value = 1\n  })\n\n  let oldOptions: unknown = null\n  watch(options, () => {\n    if (deepEqual(oldOptions, options.value)) return\n    vm.emit('update:options', options.value)\n    oldOptions = options.value\n  }, { deep: true, immediate: true })\n}\n", "// Components\nimport { makeDataTableProps } from './VDataTable'\nimport { VDataTableHeaders } from './VDataTableHeaders'\nimport { VDataTableRow } from './VDataTableRow'\nimport { VDataTableRows } from './VDataTableRows'\nimport { VTable } from '@/components/VTable'\nimport { VVirtualScrollItem } from '@/components/VVirtualScroll/VVirtualScrollItem'\n\n// Composables\nimport { provideExpanded } from './composables/expand'\nimport { createGroupBy, makeDataTableGroupProps, provideGroupBy, useGroupedItems } from './composables/group'\nimport { createHeaders } from './composables/headers'\nimport { useDataTableItems } from './composables/items'\nimport { useOptions } from './composables/options'\nimport { provideSelection } from './composables/select'\nimport { createSort, provideSort, useSortedItems } from './composables/sort'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeFilterProps, useFilter } from '@/composables/filter'\nimport { makeVirtualProps, useVirtual } from '@/composables/virtual'\n\n// Utilities\nimport { computed, shallowRef, toRef } from 'vue'\nimport { convertToUnit, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\nimport type { DataTableItem } from './types'\nimport type { VDataTableSlotProps } from './VDataTable'\nimport type { VDataTableHeadersSlots } from './VDataTableHeaders'\nimport type { VDataTableRowsSlots } from './VDataTableRows'\n\ntype VDataTableVirtualSlotProps = Omit<VDataTableSlotProps, 'setItemsPerPage' | 'page' | 'pageCount' | 'itemsPerPage'>\n\nexport type VDataTableVirtualSlots = VDataTableRowsSlots & VDataTableHeadersSlots & {\n  top: VDataTableVirtualSlotProps\n  headers: VDataTableHeadersSlots['headers']\n  bottom: VDataTableVirtualSlotProps\n  item: {\n    itemRef: Ref<HTMLElement | undefined>\n  }\n}\n\nexport const makeVDataTableVirtualProps = propsFactory({\n  ...makeDataTableProps(),\n  ...makeDataTableGroupProps(),\n  ...makeVirtualProps(),\n  ...makeFilterProps(),\n}, 'VDataTableVirtual')\n\nexport const VDataTableVirtual = genericComponent<VDataTableVirtualSlots>()({\n  name: 'VDataTableVirtual',\n\n  props: makeVDataTableVirtualProps(),\n\n  emits: {\n    'update:modelValue': (value: any[]) => true,\n    'update:sortBy': (value: any) => true,\n    'update:options': (value: any) => true,\n    'update:groupBy': (value: any) => true,\n    'update:expanded': (value: any) => true,\n    'click:row': (e: Event, value: { item: DataTableItem }) => true,\n  },\n\n  setup (props, { emit, slots }) {\n    const { groupBy } = createGroupBy(props)\n    const { sortBy, multiSort, mustSort } = createSort(props)\n\n    const { columns, headers } = createHeaders(props, {\n      groupBy,\n      showSelect: toRef(props, 'showSelect'),\n      showExpand: toRef(props, 'showExpand'),\n    })\n    const { items } = useDataTableItems(props, columns)\n\n    const search = toRef(props, 'search')\n    const { filteredItems } = useFilter<DataTableItem>(props, items, search, { transform: item => item.columns })\n\n    const { toggleSort } = provideSort({ sortBy, multiSort, mustSort })\n    const { sortByWithGroups, opened, extractRows, isGroupOpen, toggleGroup } = provideGroupBy({ groupBy, sortBy })\n\n    const { sortedItems } = useSortedItems(props, filteredItems, sortByWithGroups)\n    const { flatItems } = useGroupedItems(sortedItems, groupBy, opened)\n\n    const allItems = computed(() => extractRows(flatItems.value))\n\n    const { isSelected, select, selectAll, toggleSelect, someSelected, allSelected } = provideSelection(props, {\n      allItems,\n      currentPage: allItems,\n    })\n    const { isExpanded, toggleExpand } = provideExpanded(props)\n\n    const headerHeight = computed(() => headers.value.length * 56)\n\n    const {\n      containerRef,\n      paddingTop,\n      paddingBottom,\n      computedItems,\n      handleItemResize,\n      handleScroll,\n    } = useVirtual(props, flatItems, headerHeight)\n    const displayItems = computed(() => computedItems.value.map(item => item.raw))\n\n    useOptions({\n      sortBy,\n      page: shallowRef(1),\n      itemsPerPage: shallowRef(-1),\n      groupBy,\n      search,\n    })\n\n    provideDefaults({\n      VDataTableRows: {\n        hideNoData: toRef(props, 'hideNoData'),\n        noDataText: toRef(props, 'noDataText'),\n        loading: toRef(props, 'loading'),\n        loadingText: toRef(props, 'loadingText'),\n      },\n    })\n\n    const slotProps = computed<VDataTableVirtualSlotProps>(() => ({\n      sortBy: sortBy.value,\n      toggleSort,\n      someSelected: someSelected.value,\n      allSelected: allSelected.value,\n      isSelected,\n      select,\n      selectAll,\n      toggleSelect,\n      isExpanded,\n      toggleExpand,\n      isGroupOpen,\n      toggleGroup,\n      items: allItems.value,\n      groupedItems: flatItems.value,\n      columns: columns.value,\n      headers: headers.value,\n    }))\n\n    useRender(() => {\n      const [dataTableHeadersProps] = VDataTableHeaders.filterProps(props)\n      const [dataTableRowsProps] = VDataTableRows.filterProps(props)\n      const [tableProps] = VTable.filterProps(props)\n\n      return (\n        <VTable\n          class={[\n            'v-data-table',\n            {\n              'v-data-table--loading': props.loading,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          { ...tableProps }\n        >\n          {{\n            top: () => slots.top?.(slotProps.value),\n            wrapper: () => (\n              <div\n                ref={ containerRef }\n                onScroll={ handleScroll }\n                class=\"v-table__wrapper\"\n                style={{\n                  height: convertToUnit(props.height),\n                }}\n              >\n                <table>\n                  <thead>\n                    <VDataTableHeaders\n                      { ...dataTableHeadersProps }\n                      sticky={ props.fixedHeader }\n                      v-slots={ slots }\n                    />\n                  </thead>\n                  <tbody>\n                    <tr style={{ height: convertToUnit(paddingTop.value), border: 0 }}>\n                      <td colspan={ columns.value.length } style={{ height: convertToUnit(paddingTop.value), border: 0 }}></td>\n                    </tr>\n\n                    <VDataTableRows\n                      { ...dataTableRowsProps }\n                      items={ displayItems.value }\n                    >\n                      {{\n                        ...slots,\n                        item: itemSlotProps => (\n                          <VVirtualScrollItem\n                            key={ itemSlotProps.item.index }\n                            renderless\n                            onUpdate:height={ height => handleItemResize(itemSlotProps.item.index, height) }\n                          >\n                            { ({ itemRef }) => (\n                              slots.item?.({ ...itemSlotProps, itemRef }) ?? (\n                                <VDataTableRow\n                                  { ...itemSlotProps.props }\n                                  ref={ itemRef }\n                                  key={ itemSlotProps.item.index }\n                                  v-slots={ slots }\n                                />\n                              )\n                            )}\n                          </VVirtualScrollItem>\n                        ),\n                      }}\n                    </VDataTableRows>\n\n                    <tr style={{ height: convertToUnit(paddingBottom.value), border: 0 }}>\n                      <td colspan={ columns.value.length } style={{ height: convertToUnit(paddingBottom.value), border: 0 }}></td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            ),\n            bottom: () => slots.bottom?.(slotProps.value),\n          }}\n        </VTable>\n      )\n    })\n  },\n})\n\nexport type VDataTableVirtual = InstanceType<typeof VDataTableVirtual>\n", "// Components\nimport { makeDataTableProps } from './VDataTable'\nimport { makeVDataTableFooterProps, VDataTableFooter } from './VDataTableFooter'\nimport { VDataTableHeaders } from './VDataTableHeaders'\nimport { VDataTableRows } from './VDataTableRows'\nimport { VTable } from '@/components/VTable'\n\n// Composables\nimport { provideExpanded } from './composables/expand'\nimport { createGroupBy, provideGroupBy, useGroupedItems } from './composables/group'\nimport { createHeaders } from './composables/headers'\nimport { useDataTableItems } from './composables/items'\nimport { useOptions } from './composables/options'\nimport { createPagination, makeDataTablePaginateProps, providePagination } from './composables/paginate'\nimport { provideSelection } from './composables/select'\nimport { createSort, provideSort } from './composables/sort'\nimport { provideDefaults } from '@/composables/defaults'\n\n// Utilities\nimport { computed, provide, toRef } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { DataTableItem } from './types'\nimport type { VDataTableSlotProps, VDataTableSlots } from './VDataTable'\n\nexport const makeVDataTableServerProps = propsFactory({\n  itemsLength: {\n    type: [Number, String],\n    required: true,\n  },\n\n  ...makeDataTablePaginateProps(),\n  ...makeDataTableProps(),\n  ...makeVDataTableFooterProps(),\n}, 'VDataTableServer')\n\nexport const VDataTableServer = genericComponent<VDataTableSlots>()({\n  name: 'VDataTableServer',\n\n  props: makeVDataTableServerProps(),\n\n  emits: {\n    'update:modelValue': (value: any[]) => true,\n    'update:page': (page: number) => true,\n    'update:itemsPerPage': (page: number) => true,\n    'update:sortBy': (sortBy: any) => true,\n    'update:options': (options: any) => true,\n    'update:expanded': (options: any) => true,\n    'update:groupBy': (value: any) => true,\n    'click:row': (e: Event, value: { item: DataTableItem }) => true,\n  },\n\n  setup (props, { emit, slots }) {\n    const { groupBy } = createGroupBy(props)\n    const { sortBy, multiSort, mustSort } = createSort(props)\n    const { page, itemsPerPage } = createPagination(props)\n    const itemsLength = computed(() => parseInt(props.itemsLength, 10))\n\n    const { columns, headers } = createHeaders(props, {\n      groupBy,\n      showSelect: toRef(props, 'showSelect'),\n      showExpand: toRef(props, 'showExpand'),\n    })\n\n    const { items } = useDataTableItems(props, columns)\n\n    const { toggleSort } = provideSort({ sortBy, multiSort, mustSort, page })\n\n    const { opened, isGroupOpen, toggleGroup, extractRows } = provideGroupBy({ groupBy, sortBy })\n\n    const { pageCount, setItemsPerPage } = providePagination({ page, itemsPerPage, itemsLength })\n\n    const { flatItems } = useGroupedItems(items, groupBy, opened)\n\n    const { isSelected, select, selectAll, toggleSelect, someSelected, allSelected } = provideSelection(props, {\n      allItems: items,\n      currentPage: items,\n    })\n\n    const { isExpanded, toggleExpand } = provideExpanded(props)\n\n    const itemsWithoutGroups = computed(() => extractRows(items.value))\n\n    useOptions({\n      page,\n      itemsPerPage,\n      sortBy,\n      groupBy,\n      search: toRef(props, 'search'),\n    })\n\n    provide('v-data-table', {\n      toggleSort,\n      sortBy,\n    })\n\n    provideDefaults({\n      VDataTableRows: {\n        hideNoData: toRef(props, 'hideNoData'),\n        noDataText: toRef(props, 'noDataText'),\n        loading: toRef(props, 'loading'),\n        loadingText: toRef(props, 'loadingText'),\n      },\n    })\n\n    const slotProps = computed<VDataTableSlotProps>(() => ({\n      page: page.value,\n      itemsPerPage: itemsPerPage.value,\n      sortBy: sortBy.value,\n      pageCount: pageCount.value,\n      toggleSort,\n      setItemsPerPage,\n      someSelected: someSelected.value,\n      allSelected: allSelected.value,\n      isSelected,\n      select,\n      selectAll,\n      toggleSelect,\n      isExpanded,\n      toggleExpand,\n      isGroupOpen,\n      toggleGroup,\n      items: itemsWithoutGroups.value,\n      groupedItems: flatItems.value,\n      columns: columns.value,\n      headers: headers.value,\n    }))\n\n    useRender(() => {\n      const [dataTableFooterProps] = VDataTableFooter.filterProps(props)\n      const [dataTableHeadersProps] = VDataTableHeaders.filterProps(props)\n      const [dataTableRowsProps] = VDataTableRows.filterProps(props)\n      const [tableProps] = VTable.filterProps(props)\n\n      return (\n        <VTable\n          class={[\n            'v-data-table',\n            {\n              'v-data-table--loading': props.loading,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          { ...tableProps }\n        >\n          {{\n            top: () => slots.top?.(slotProps.value),\n            default: () => slots.default ? slots.default(slotProps.value) : (\n              <>\n                { slots.colgroup?.(slotProps.value) }\n                <thead class=\"v-data-table__thead\" role=\"rowgroup\">\n                  <VDataTableHeaders\n                    { ...dataTableHeadersProps }\n                    sticky={ props.fixedHeader }\n                    v-slots={ slots }\n                  />\n                </thead>\n                { slots.thead?.(slotProps.value) }\n                <tbody class=\"v-data-table__tbody\" role=\"rowgroup\">\n                  { slots.body ? slots.body(slotProps.value) : (\n                    <VDataTableRows\n                      { ...dataTableRowsProps }\n                      items={ flatItems.value }\n                      v-slots={ slots }\n                    />\n                  )}\n                </tbody>\n                { slots.tbody?.(slotProps.value) }\n                { slots.tfoot?.(slotProps.value) }\n              </>\n            ),\n            bottom: () => slots.bottom ? slots.bottom(slotProps.value) : (\n              <VDataTableFooter\n                { ...dataTableFooterProps }\n                v-slots={{\n                  prepend: slots['footer.prepend'],\n                }}\n              />\n            ),\n          }}\n        </VTable>\n      )\n    })\n  },\n})\n\nexport type VDataTableServer = InstanceType<typeof VDataTableServer>\n"],
  "mappings": "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",
  "names": ["makeDataTablePaginateProps", "propsFactory", "page", "type", "Number", "String", "default", "itemsPerPage", "VDataTablePaginationSymbol", "Symbol", "for", "createPagination", "props", "useProxiedModel", "undefined", "value", "providePagination", "options", "itemsLength", "startIndex", "computed", "stopIndex", "Math", "min", "pageCount", "ceil", "watchEffect", "setItemsPerPage", "nextPage", "clamp", "prevPage", "setPage", "data", "provide", "usePagination", "inject", "Error", "usePaginatedItems", "items", "paginatedItems", "slice", "makeVDataTableFooterProps", "propsFactory", "prevIcon", "type", "String", "default", "nextIcon", "firstIcon", "lastIcon", "itemsPerPageText", "pageText", "firstPageLabel", "prevPageLabel", "nextPageLabel", "lastPageLabel", "itemsPerPageOptions", "Array", "value", "title", "showCurrentPage", "Boolean", "VDataTableFooter", "genericComponent", "name", "props", "setup", "_ref", "slots", "t", "useLocale", "page", "pageCount", "startIndex", "stopIndex", "itemsLength", "itemsPerPage", "setItemsPerPage", "usePagination", "computed", "map", "option", "_createVNode", "prepend", "VSelect", "v", "Number", "VBtn", "onClick", "Math", "max", "min", "VDataTableColumn", "defineFunctionalComponent", "align", "type", "String", "default", "fixed", "Boolean", "fixedOffset", "Number", "height", "lastFixed", "noPadding", "tag", "width", "props", "_ref", "slots", "attrs", "Tag", "_createVNode", "_mergeProps", "convertToUnit", "left", "makeDataTableHeaderProps", "propsFactory", "headers", "type", "Array", "default", "VDataTableHeadersSymbol", "Symbol", "for", "createHeaders", "props", "options", "ref", "columns", "watchEffect", "wrapped", "length", "isArray", "flat", "flatMap", "row", "index", "map", "column", "rowCount", "defaultHeader", "title", "sortable", "defaultActionHeader", "width", "groupBy", "value", "findIndex", "_ref", "key", "unshift", "rowspan", "splice", "showSelect", "_ref2", "showExpand", "_ref3", "push", "fixedRows", "createRange", "fixedOffsets", "fill", "forEach", "_ref4", "consoleWarn", "i", "fixedOffset", "Number", "fixed", "lastFixed", "seen", "Set", "filtered", "has", "add", "at", "data", "provide", "useHeaders", "inject", "Error", "singleSelectStrategy", "showSelectAll", "allSelected", "select", "_ref", "items", "value", "Set", "selectAll", "_ref2", "selected", "pageSelectStrategy", "_ref3", "currentPage", "_ref4", "item", "add", "delete", "_ref5", "allSelectStrategy", "_ref6", "allItems", "_ref7", "_ref8", "makeDataTableSelectProps", "propsFactory", "showSelect", "Boolean", "selectStrategy", "type", "String", "Object", "default", "modelValue", "Array", "VDataTableSelectionSymbol", "Symbol", "for", "provideSelection", "props", "_ref9", "useProxiedModel", "v", "values", "allSelectable", "computed", "filter", "selectable", "currentPageSelectable", "isSelected", "wrapInArray", "every", "has", "isSomeSelected", "some", "newSelected", "toggleSelect", "someSelected", "size", "data", "provide", "useSelection", "inject", "Error", "makeDataTableSortProps", "propsFactory", "sortBy", "type", "Array", "default", "customKeySort", "Object", "multiSort", "Boolean", "mustSort", "VDataTableSortSymbol", "Symbol", "for", "createSort", "props", "useProxiedModel", "toRef", "provideSort", "options", "page", "toggleSort", "column", "newSortBy", "value", "map", "x", "item", "find", "key", "order", "filter", "isSorted", "data", "provide", "useSort", "inject", "Error", "useSortedItems", "items", "locale", "useLocale", "sortedItems", "computed", "length", "sortItems", "current", "sortByItems", "customSorters", "stringCollator", "Intl", "Collator", "sensitivity", "usage", "sort", "a", "b", "i", "sortKey", "sortOrder", "sortA", "getObjectValueByPath", "raw", "sortB", "customResult", "Date", "getTime", "s", "toString", "toLocaleLowerCase", "isEmpty", "isNaN", "Number", "compare", "makeVDataTableHeadersProps", "propsFactory", "color", "String", "sticky", "Boolean", "multiSort", "sortAscIcon", "type", "IconValue", "default", "sortDescIcon", "makeLoaderProps", "VDataTableHeaders", "genericComponent", "name", "props", "setup", "_ref", "slots", "emit", "toggleSort", "sortBy", "isSorted", "useSort", "someSelected", "allSelected", "selectAll", "showSelectAll", "useSelection", "columns", "headers", "useHeaders", "loaderClasses", "useLoader", "getFixedStyles", "column", "y", "fixed", "undefined", "position", "zIndex", "left", "convertToUnit", "fixedOffset", "top", "getSortIcon", "item", "value", "find", "key", "order", "backgroundColorClasses", "backgroundColorStyles", "useBackgroundColor", "slotProps", "computed", "VDataTableHeaderCell", "_ref2", "x", "noPadding", "_createVNode", "VDataTableColumn", "align", "sortable", "width", "minWidth", "colspan", "rowspan", "lastFixed", "columnSlotName", "columnSlotProps", "VCheckboxBtn", "title", "VIcon", "findIndex", "useRender", "_Fragment", "map", "row", "loading", "length", "LoaderSlot", "loader", "makeDataTableGroupProps", "propsFactory", "groupBy", "type", "Array", "default", "VDataTableGroupSymbol", "Symbol", "for", "createGroupBy", "props", "useProxiedModel", "provideGroupBy", "options", "sortBy", "opened", "ref", "Set", "sortByWithGroups", "computed", "value", "map", "val", "order", "concat", "isGroupOpen", "group", "has", "id", "toggleGroup", "newOpened", "add", "delete", "extractRows", "items", "dive", "arr", "item", "push", "key", "depth", "data", "provide", "useGroupBy", "inject", "Error", "groupItemsByProperty", "length", "groups", "Map", "getObjectValueByPath", "raw", "set", "get", "groupItems", "arguments", "undefined", "prefix", "groupedItems", "rest", "slice", "forEach", "flattenItems", "flatItems", "useGroupedItems", "makeVDataTableGroupHeaderRowProps", "propsFactory", "item", "type", "Object", "required", "VDataTableGroupHeaderRow", "genericComponent", "name", "props", "setup", "_ref", "slots", "isGroupOpen", "toggleGroup", "extractRows", "useGroupBy", "isSelected", "isSomeSelected", "select", "useSelection", "columns", "useHeaders", "rows", "computed", "_createVNode", "depth", "value", "map", "column", "key", "icon", "onClick", "count", "length", "VDataTableColumn", "default", "VBtn", "_createTextVNode", "modelValue", "indeterminate", "selectGroup", "v", "VCheckboxBtn", "makeDataTableExpandProps", "propsFactory", "expandOnClick", "Boolean", "showExpand", "expanded", "type", "Array", "default", "VDataTableExpandedKey", "Symbol", "for", "provideExpanded", "props", "toRef", "useProxiedModel", "v", "Set", "values", "expand", "item", "value", "newExpanded", "delete", "add", "isExpanded", "has", "toggleExpand", "data", "provide", "useExpanded", "inject", "Error", "makeVDataTableRowProps", "propsFactory", "index", "Number", "item", "Object", "onClick", "Function", "VDataTableRow", "defineComponent", "name", "props", "setup", "_ref", "slots", "isSelected", "toggleSelect", "useSelection", "isExpanded", "toggleExpand", "useExpanded", "columns", "useHeaders", "useRender", "_createVNode", "value", "map", "column", "i", "VDataTableColumn", "align", "fixed", "fixedOffset", "lastFixed", "key", "width", "default", "slotName", "slotProps", "VCheckboxBtn", "selectable", "withModifiers", "VBtn", "getPropertyFromItem", "makeVDataTableRowsProps", "propsFactory", "loading", "Boolean", "String", "loadingText", "type", "default", "hideNoData", "items", "Array", "noDataText", "rowHeight", "Number", "Function", "VDataTableRows", "genericComponent", "name", "props", "setup", "_ref", "emit", "slots", "columns", "useHeaders", "expandOnClick", "toggleExpand", "isExpanded", "useExpanded", "isSelected", "toggleSelect", "useSelection", "toggleGroup", "isGroupOpen", "useGroupBy", "t", "useLocale", "useRender", "_createVNode", "value", "length", "_Fragment", "map", "item", "index", "VDataTableGroupHeaderRow", "id", "slotProps", "itemSlotProps", "key", "onClick", "event", "undefined", "VDataTableRow", "makeDataTableItemsProps", "propsFactory", "items", "type", "Array", "default", "itemValue", "String", "Function", "itemSelectable", "returnObject", "Boolean", "transformItem", "props", "item", "index", "columns", "value", "getPropertyFromItem", "selectable", "itemColumns", "reduce", "obj", "column", "key", "raw", "transformItems", "map", "useDataTableItems", "computed", "useOptions", "_ref", "page", "itemsPerPage", "sortBy", "groupBy", "search", "vm", "getCurrentInstance", "options", "computed", "value", "watch", "oldOptions", "deepEqual", "emit", "deep", "immediate", "makeDataTableProps", "propsFactory", "makeVDataTableRowsProps", "width", "String", "Number", "search", "makeDataTableExpandProps", "makeDataTableGroupProps", "makeDataTableHeaderProps", "makeDataTableItemsProps", "makeDataTableSelectProps", "makeDataTableSortProps", "makeVDataTableHeadersProps", "makeVTableProps", "makeVDataTableProps", "makeDataTablePaginateProps", "makeFilterProps", "makeVDataTableFooterProps", "VDataTable", "genericComponent", "name", "props", "emits", "value", "setup", "_ref", "emit", "slots", "groupBy", "createGroupBy", "sortBy", "multiSort", "mustSort", "createSort", "page", "itemsPerPage", "createPagination", "columns", "headers", "createHeaders", "showSelect", "toRef", "showExpand", "items", "useDataTableItems", "filteredItems", "useFilter", "transform", "item", "toggleSort", "provideSort", "sortByWithGroups", "opened", "extractRows", "isGroupOpen", "toggleGroup", "provideGroupBy", "sortedItems", "useSortedItems", "flatItems", "useGroupedItems", "itemsLength", "computed", "length", "startIndex", "stopIndex", "pageCount", "setItemsPerPage", "providePagination", "paginatedItems", "usePaginatedItems", "paginatedItemsWithoutGroups", "isSelected", "select", "selectAll", "toggleSelect", "someSelected", "allSelected", "provideSelection", "allItems", "currentPage", "isExpanded", "toggleExpand", "provideExpanded", "useOptions", "provideDefaults", "VDataTableRows", "hideNoData", "noDataText", "loading", "loadingText", "slotProps", "groupedItems", "useRender", "dataTableFooterProps", "VDataTableFooter", "filterProps", "dataTableHeadersProps", "VDataTableHeaders", "dataTableRowsProps", "tableProps", "VTable", "_createVNode", "_mergeProps", "class", "style", "top", "default", "_Fragment", "colgroup", "thead", "body", "tbody", "tfoot", "bottom", "prepend", "makeVDataTableVirtualProps", "propsFactory", "makeDataTableProps", "makeDataTableGroupProps", "makeVirtualProps", "makeFilterProps", "VDataTableVirtual", "genericComponent", "name", "props", "emits", "value", "click:row", "e", "setup", "_ref", "emit", "slots", "groupBy", "createGroupBy", "sortBy", "multiSort", "mustSort", "createSort", "columns", "headers", "createHeaders", "showSelect", "toRef", "showExpand", "items", "useDataTableItems", "search", "filteredItems", "useFilter", "transform", "item", "toggleSort", "provideSort", "sortByWithGroups", "opened", "extractRows", "isGroupOpen", "toggleGroup", "provideGroupBy", "sortedItems", "useSortedItems", "flatItems", "useGroupedItems", "allItems", "computed", "isSelected", "select", "selectAll", "toggleSelect", "someSelected", "allSelected", "provideSelection", "currentPage", "isExpanded", "toggleExpand", "provideExpanded", "headerHeight", "length", "containerRef", "paddingTop", "paddingBottom", "computedItems", "handleItemResize", "handleScroll", "useVirtual", "displayItems", "map", "raw", "useOptions", "page", "shallowRef", "itemsPerPage", "provideDefaults", "VDataTableRows", "hideNoData", "noDataText", "loading", "loadingText", "slotProps", "groupedItems", "useRender", "dataTableHeadersProps", "VDataTableHeaders", "filterProps", "dataTableRowsProps", "tableProps", "VTable", "_createVNode", "_mergeProps", "class", "style", "top", "wrapper", "height", "convertToUnit", "fixedHeader", "border", "itemSlotProps", "VVirtualScrollItem", "index", "default", "_ref2", "itemRef", "VDataTableRow", "bottom", "makeVDataTableServerProps", "propsFactory", "itemsLength", "type", "Number", "String", "required", "makeDataTablePaginateProps", "makeDataTableProps", "makeVDataTableFooterProps", "VDataTableServer", "genericComponent", "name", "props", "emits", "value", "page", "sortBy", "options", "click:row", "e", "setup", "_ref", "emit", "slots", "groupBy", "createGroupBy", "multiSort", "mustSort", "createSort", "itemsPerPage", "createPagination", "computed", "parseInt", "columns", "headers", "createHeaders", "showSelect", "toRef", "showExpand", "items", "useDataTableItems", "toggleSort", "provideSort", "opened", "isGroupOpen", "toggleGroup", "extractRows", "provideGroupBy", "pageCount", "setItemsPerPage", "providePagination", "flatItems", "useGroupedItems", "isSelected", "select", "selectAll", "toggleSelect", "someSelected", "allSelected", "provideSelection", "allItems", "currentPage", "isExpanded", "toggleExpand", "provideExpanded", "itemsWithoutGroups", "useOptions", "search", "provide", "provideDefaults", "VDataTableRows", "hideNoData", "noDataText", "loading", "loadingText", "slotProps", "groupedItems", "useRender", "dataTableFooterProps", "VDataTableFooter", "filterProps", "dataTableHeadersProps", "VDataTableHeaders", "dataTableRowsProps", "tableProps", "VTable", "_createVNode", "_mergeProps", "class", "style", "top", "default", "_Fragment", "colgroup", "fixedHeader", "thead", "body", "tbody", "tfoot", "bottom", "prepend"]
}
